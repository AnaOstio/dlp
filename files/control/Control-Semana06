/*
	Control Test
	PLD 23/24
*/

// Global variables
var integer int;
var character char;
var real float32;

var MATRIXSIZE int;
var matrix [10][10] struct{ var a int;};

// Functions
func setValue(var row int, var columnn int, var value int) {
	if (row >= 0 && row < MATRIXSIZE && columnn >= 0 && columnn < MATRIXSIZE) {
		matrix[row][column] = value;
	}
}
func getValue(var row int, var columnn int) int {
	if ((row < 0 || row >= MATRIXSIZE) || (columnn < 0 && columnn >= MATRIXSIZE)) {
		return -1;
	}
	else {
		return matrix[row][column];
	}
}
func fill(var value int) {
	var i, j int;  // Multiple variable definition
	i = 0;
	while (i < MATRIXSIZE) {
		j = 0;
		while (j < MATRIXSIZE) {
			setValue(i, j, value);
			j = j + 1;
		}
		i = i + 1;
	}
}
func show() {
	var i, j int;
	i = 0;
	write '[','\n';
	while (i < MATRIXSIZE) {
		j = 0;
		write '\t','[';
		while (j < MATRIXSIZE) {
			write getValue(i, j);
			if (j != MATRIXSIZE - 1) {
				write ',';
			}
			j = j + 1;
		}
		write ']','\n';
		i = i + 1;
	}
	write ']';
}

// Record
var date struct {
	var day, month, year int;
};

// Main program
//func no_main() { // Uncomment to test
func main() { // Uncomment to test
	var characters [1][2][3]char;
	MATRIXSIZE = 10;
	fill(1);
	setValue(5,5,5);
	integer = getValue(5,5);
	if (integer == 5) //{ // Uncomment { to test
		write 'O','k','\n';
	//}
	else {
		write 'E','r','r','o','r','\n';
	}
	show();

	date.day = 4;
	date.mounth = 3;
	date.year = 2020;

	character = char(date.day);
	real = 4.5 + 4. * 3e+3 - 5.4E-3;

	//var error int; // Uncomment to test
}
// def no_function() {} // Uncomment to test