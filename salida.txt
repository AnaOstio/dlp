
#source "fichero.txt"

	 ' * Tipo ast.types.ArrayType@66d33a v (offset 0)

 ' Invocation to the main function
call main
halt


#line	4
main:
	 ' * Parameters
	 ' * Local variables
	 ' * Tipo Float32 value (offset -4)
	 ' * Tipo Integer j (offset -6)
	 ' * Tipo Integer i (offset -8)
	 ' * Tipo ast.types.ArrayType@1d251891 w (offset -48)
	 ' * Tipo ast.types.StructType@48140564 date (offset -54)
	enter 54
#line	12
	 ' * Read
	pushi	-54
	push BP
	addi
	pushi	4
	addi
	ini
	storei

#line	13
	 ' * Assignment
	pushi	-54
	push BP
	addi
	pushi	0
	addi
	pushb	97
	b2i
	storei

#line	14
	 ' * Assignment
	pushi	-54
	push BP
	addi
	pushi	2
	addi
	pushi	-54
	push BP
	addi
	pushi	4
	addi
	loadi
	pushi	-54
	push BP
	addi
	pushi	0
	addi
	loadi
	muli
	pushi	12
	modi
	pushi	1
	addi
	storei

#line	15
	 ' * Write
	pushi	-54
	push BP
	addi
	pushi	4
	addi
	loadi
	outi

#line	15
	 ' * Write
	pushb	10
	outb

#line	15
	 ' * Write
	pushi	-54
	push BP
	addi
	pushi	2
	addi
	loadi
	outi

#line	15
	 ' * Write
	pushb	10
	outb

#line	0
	 ' * Write
	pushi	-54
	push BP
	addi
	pushi	0
	addi
	loadi
	i2f
	outf

#line	15
	 ' * Write
	pushb	10
	outb

#line	17
	 ' * Read
	pushi	-4
	push BP
	addi
	inf
	storef

#line	19
	 ' * Assignment
	pushi	-8
	push BP
	addi
	pushi	0
	storei

#line	20
	 ' * While
#line	20
label1:
	pushi	-8
	push BP
	addi
	loadi
	pushi	10
	lti
	jz label2
	 ' * While body
#line	21
	 ' * Assignment
	pusha	0
	pushi	-8
	push BP
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	-4
	push BP
	addi
	loadf
	storef

#line	22
	 ' * Write
	pushi	-8
	push BP
	addi
	loadi
	outi

#line	22
	 ' * Write
	pushb	58
	outb

#line	22
	 ' * Write
	pusha	0
	pushi	-8
	push BP
	addi
	loadi
	pushi	4
	muli
	addi
	loadf
	outf

#line	22
	 ' * Write
	pushb	32
	outb

#line	23
	 ' * If-Else
#line	23
	pushi	-8
	push BP
	addi
	loadi
	pushi	2
	modi
	jz label3
	 ' * True body
#line	24
	 ' * Write
	pushb	111
	outb

#line	24
	 ' * Write
	pushb	100
	outb

#line	24
	 ' * Write
	pushb	100
	outb

#line	24
	 ' * Write
	pushb	10
	outb

	jmp label4
label3:
	 ' * False body
#line	26
	 ' * Write
	pushb	101
	outb

#line	26
	 ' * Write
	pushb	118
	outb

#line	26
	 ' * Write
	pushb	101
	outb

#line	26
	 ' * Write
	pushb	110
	outb

#line	26
	 ' * Write
	pushb	10
	outb

label4:

#line	27
	 ' * Assignment
	pushi	-8
	push BP
	addi
	pushi	-8
	push BP
	addi
	loadi
	pushi	1
	addi
	storei

	jmp label1
label2:

#line	29
	 ' * Write
	pushb	10
	outb

#line	31
	 ' * Assignment
	pushi	-8
	push BP
	addi
	pushi	0
	storei

#line	32
	 ' * While
#line	32
label5:
	pushi	-8
	push BP
	addi
	loadi
	pushi	4
	lti
	jz label6
	 ' * While body
#line	33
	 ' * Assignment
	pushi	-6
	push BP
	addi
	pushi	0
	storei

#line	34
	 ' * While
#line	34
label7:
	pushi	-6
	push BP
	addi
	loadi
	pushi	5
	lti
	jz label8
	 ' * While body
#line	35
	 ' * Assignment
	pushi	-48
	push BP
	addi
	pushi	-8
	push BP
	addi
	loadi
	pushi	10
	muli
	addi
	pushi	-6
	push BP
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	-8
	push BP
	addi
	loadi
	pushi	-6
	push BP
	addi
	loadi
	addi
	storei

#line	36
	 ' * Write
	pushi	-48
	push BP
	addi
	pushi	-8
	push BP
	addi
	loadi
	pushi	10
	muli
	addi
	pushi	-6
	push BP
	addi
	loadi
	pushi	2
	muli
	addi
	loadi
	outi

#line	36
	 ' * Write
	pushb	32
	outb

#line	37
	 ' * Assignment
	pushi	-6
	push BP
	addi
	pushi	-6
	push BP
	addi
	loadi
	pushi	1
	addi
	storei

	jmp label7
label8:

#line	39
	 ' * Write
	pushb	10
	outb

#line	40
	 ' * Assignment
	pushi	-8
	push BP
	addi
	pushi	-8
	push BP
	addi
	loadi
	pushi	1
	addi
	storei

	jmp label5
label6:

	ret 0, 54, 0

