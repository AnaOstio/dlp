
#source "fichero.txt"

	 ' * Tipo Integer j (offset 0)
	 ' * Tipo Integer n (offset 2)
	 ' * Tipo Integer i (offset 4)
	 ' * Tipo Char c (offset 6)
	 ' * Tipo StructType{fields=[Field{type=Integer, name='integer', offset=0}, Field{type=Char, name='character', offset=0}]} pair (offset 7)
	 ' * Tipo ArrayType[of:ArrayType[of:Integer, size:10], size:10] matrix (offset 10)

 ' Invocation to the main function
call main
halt


#line	12
p:
	 ' * Parameters
	 ' * Local variables
	enter 0
	ret 0, 0, 0

#line	14
f:
	 ' * Parameters
	 ' * Tipo Float32 r (offset 6)
	 ' * Tipo Integer e (offset 4)
	 ' * Local variables
	 ' * Tipo Float32 real (offset -4)
	 ' * Tipo Char c (offset -5)
	enter 5
#line	17
	 ' * Assignment
	pushi	-4
	push BP
	addi
	pusha	7
	pushi	0
	addi
	loadb
	b2i
	i2f
	pusha	7
	pushi	0
	addi
	loadi
	i2f
	addf
	pushi	6
	push BP
	addi
	loadf
	addf
	pushi	4
	push BP
	addi
	loadi
	i2f
	addf
	storef

#line	18
	 ' * Assignment
	pushi	-5
	push BP
	addi
	pushb	48
	storeb

#line	19
	 ' * Return
	pushi	-5
	push BP
	addi
	loadb
	b2i
	ret 2, 5, 6


#line	24
fill:
	 ' * Parameters
	 ' * Tipo Integer row (offset 8)
	 ' * Tipo Integer value (offset 6)
	 ' * Tipo Integer increment (offset 4)
	 ' * Local variables
	 ' * Tipo Integer inc (offset -2)
	 ' * Tipo Integer i (offset -4)
	enter 4
#line	26
	 ' * Assignment
	pushi	-4
	push BP
	addi
	pushi	0
	storei

#line	27
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	4
	push BP
	addi
	loadi
	storei

#line	28
	 ' * While
#line	28
label1:
	pushi	-4
	push BP
	addi
	loadi
	pushi	10
	lti
	jz label2
	 ' * While body
#line	29
	 ' * Assignment
	pusha	10
	pushi	8
	push BP
	addi
	loadi
	pushi	20
	muli
	addi
	pushi	-4
	push BP
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	6
	push BP
	addi
	loadi
	pushi	-2
	push BP
	addi
	loadi
	addi
	storei

#line	30
	 ' * Assignment
	pushi	-4
	push BP
	addi
	pushi	-4
	push BP
	addi
	loadi
	pushi	1
	addi
	storei

#line	31
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	-2
	push BP
	addi
	loadi
	pushi	4
	push BP
	addi
	loadi
	addi
	storei

	jmp label1
label2:

	ret 0, 4, 6

#line	35
show:
	 ' * Parameters
	 ' * Tipo Integer row (offset 4)
	 ' * Local variables
	 ' * Tipo Integer i (offset -2)
	enter 2
#line	37
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	0
	storei

#line	38
	 ' * While
#line	38
label3:
	pushi	-2
	push BP
	addi
	loadi
	pushi	10
	lti
	jz label4
	 ' * While body
#line	39
	 ' * Write
	pushb	40
	outb

#line	39
	 ' * Write
	pushi	4
	push BP
	addi
	loadi
	outi

#line	39
	 ' * Write
	pushb	44
	outb

#line	39
	 ' * Write
	pushi	-2
	push BP
	addi
	loadi
	outi

#line	39
	 ' * Write
	pushb	41
	outb

#line	39
	 ' * Write
	pushb	58
	outb

#line	39
	 ' * Write
	pusha	10
	pushi	4
	push BP
	addi
	loadi
	pushi	20
	muli
	addi
	pushi	-2
	push BP
	addi
	loadi
	pushi	2
	muli
	addi
	loadi
	outi

#line	39
	 ' * Write
	pushb	32
	outb

#line	40
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	-2
	push BP
	addi
	loadi
	pushi	1
	addi
	storei

	jmp label3
label4:

#line	42
	 ' * Write
	pushb	10
	outb

	ret 0, 2, 2

#line	46
main:
	 ' * Parameters
	 ' * Local variables
	 ' * Tipo Integer i (offset -2)
	enter 2
#line	49
	call p

#line	50
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	0
	storei

#line	51
	 ' * Assignment
	pusha	7
	pushi	0
	addi
	pushb	48
	storeb

#line	52
	 ' * Assignment
	pusha	7
	pushi	0
	addi
	pushb	48
	b2i
	storei

#line	53
	 ' * Write
	pushi	-2
	push BP
	addi
	loadi
	i2f
	pusha	7
	pushi	0
	addi
	loadb
	b2i
	call f
	outi

#line	53
	 ' * Write
	pushb	10
	outb

#line	55
	pushf	1.3
	pushi	2
	call f
	popi

#line	57
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	0
	storei

#line	58
	 ' * Assignment
	pusha	0
	pushi	0
	storei

#line	59
	 ' * While
#line	59
label5:
	pushi	-2
	push BP
	addi
	loadi
	pushi	10
	lti
	jz label6
	 ' * While body
#line	60
	pushi	-2
	push BP
	addi
	loadi
	pusha	0
	loadi
	pushi	1
	call fill

#line	61
	pushi	-2
	push BP
	addi
	loadi
	call show

#line	62
	 ' * Assignment
	pushi	-2
	push BP
	addi
	pushi	-2
	push BP
	addi
	loadi
	pushi	1
	addi
	storei

#line	63
	 ' * Assignment
	pusha	0
	pushi	-2
	push BP
	addi
	loadi
	pushi	10
	muli
	storei

	jmp label5
label6:

	ret 0, 2, 0

